@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer

<EditForm Model=@Profile OnValidSubmit=@(async () => {await SubmitCallback.InvokeAsync(Profile);})>
    <DataAnnotationsValidator/>
    
    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" placeholder=@PlaceholderProfile?.FirstName @bind-Value=Profile.FirstName class="form-control"  />
    </div>
    <div class="form-group">
        <label for="FirstName">Last Name</label>
        <InputText id="FirstName" placeholder=@PlaceholderProfile?.LastName @bind-Value=Profile.LastName  />
    </div>
    <div class="form-group">
        <label for="FirstName">Email</label>
        <InputText id="FirstName" placeholder=@PlaceholderProfile?.Email @bind-Value=Profile.Email  />
    </div>
    <div class="form-group">
        <label for="FirstName">Phone Number</label>
        <InputText id="FirstName" placeholder=@PlaceholderProfile?.PhoneNumber @bind-Value=Profile.PhoneNumber  />
    </div>
    <input type="submit" value="Submit"/>
    <ValidationSummary/>
</EditForm>

@code {
    private Profile Profile;
    
    [Parameter]
    public EventCallback<Profile> SubmitCallback {get; set;}

    protected override void OnInitialized(){
        Profile ??= PlaceholderProfile ?? new Profile();
    }

    [Parameter]
    public Profile? PlaceholderProfile {get; set;}
}